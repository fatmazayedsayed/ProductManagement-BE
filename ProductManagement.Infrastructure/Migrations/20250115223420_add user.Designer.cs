// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductManagement.Infrastructure;

#nullable disable

namespace ProductManagement.Infrastructure.Migrations
{
    [DbContext(typeof(ProductManagementDbContext))]
    [Migration("20250115223420_add user")]
    partial class adduser
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProductManagement.Domain.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("InsertedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ParentCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6afb56f8-7d1e-4d1e-b21e-37c3b49d8623"),
                            Description = "Devices and gadgets",
                            InsertedDate = new DateTime(2025, 1, 16, 0, 34, 18, 272, DateTimeKind.Local).AddTicks(4363),
                            IsDeleted = false,
                            Name = "Electronics",
                            Status = (byte)1
                        },
                        new
                        {
                            Id = new Guid("cd9fb4d9-9db3-4249-809d-ffa0833d1d30"),
                            Description = "Men's and Women's apparel",
                            InsertedDate = new DateTime(2025, 1, 16, 0, 34, 18, 272, DateTimeKind.Local).AddTicks(4369),
                            IsDeleted = false,
                            Name = "Clothing",
                            Status = (byte)1
                        },
                        new
                        {
                            Id = new Guid("001076b4-9293-459d-b2bc-44f4bc3b8096"),
                            Description = "Daily essentials and food items",
                            InsertedDate = new DateTime(2025, 1, 16, 0, 34, 18, 272, DateTimeKind.Local).AddTicks(4372),
                            IsDeleted = false,
                            Name = "Groceries",
                            Status = (byte)1
                        });
                });

            modelBuilder.Entity("ProductManagement.Domain.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("InsertedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = new Guid("475b69ce-9724-4e42-a9dd-eea1685228bf"),
                            CategoryId = new Guid("6afb56f8-7d1e-4d1e-b21e-37c3b49d8623"),
                            Description = "Latest model smartphone",
                            InsertedDate = new DateTime(2025, 1, 16, 0, 34, 18, 272, DateTimeKind.Local).AddTicks(4398),
                            IsDeleted = false,
                            Name = "Smartphone",
                            Price = 699.99m,
                            Status = (byte)1,
                            StockQuantity = 50
                        },
                        new
                        {
                            Id = new Guid("d8ebf129-2c3f-41c4-a804-0d86b813b6d4"),
                            CategoryId = new Guid("cd9fb4d9-9db3-4249-809d-ffa0833d1d30"),
                            Description = "Cotton T-shirt",
                            InsertedDate = new DateTime(2025, 1, 16, 0, 34, 18, 272, DateTimeKind.Local).AddTicks(4411),
                            IsDeleted = false,
                            Name = "T-Shirt",
                            Price = 19.99m,
                            Status = (byte)1,
                            StockQuantity = 200
                        },
                        new
                        {
                            Id = new Guid("fdd83d05-1ad5-4c79-bd20-9071da669721"),
                            CategoryId = new Guid("001076b4-9293-459d-b2bc-44f4bc3b8096"),
                            Description = "Organic pasta",
                            InsertedDate = new DateTime(2025, 1, 16, 0, 34, 18, 272, DateTimeKind.Local).AddTicks(4415),
                            IsDeleted = false,
                            Name = "Pasta",
                            Price = 4.99m,
                            Status = (byte)1,
                            StockQuantity = 100
                        });
                });

            modelBuilder.Entity("ProductManagement.Domain.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("InsertedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2db92873-586a-43b7-902e-5a2a7f0a1a19"),
                            Email = "Admin@urwave.com",
                            InsertedDate = new DateTime(2025, 1, 16, 0, 34, 18, 272, DateTimeKind.Local).AddTicks(4233),
                            IsActive = true,
                            IsDeleted = false,
                            Password = "f99c5521e65bcf281a101f9aa73351179c8e4daf",
                            UserName = "admin",
                            UserType = 1
                        });
                });

            modelBuilder.Entity("ProductManagement.Domain.Models.Category", b =>
                {
                    b.HasOne("ProductManagement.Domain.Models.Category", "ParentCategory")
                        .WithMany()
                        .HasForeignKey("ParentCategoryId");

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("ProductManagement.Domain.Models.Product", b =>
                {
                    b.HasOne("ProductManagement.Domain.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
