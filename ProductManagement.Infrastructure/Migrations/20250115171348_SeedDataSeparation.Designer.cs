// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductManagement.Infrastructure;

#nullable disable

namespace ProductManagement.Infrastructure.Migrations
{
    [DbContext(typeof(ProductManagementDbContext))]
    [Migration("20250115171348_SeedDataSeparation")]
    partial class SeedDataSeparation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProductManagement.Domain.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("InsertedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ParentCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = new Guid("864267b8-8ab3-49a9-a6be-c65502bc9d92"),
                            Description = "Devices and gadgets",
                            InsertedDate = new DateTime(2025, 1, 15, 19, 13, 46, 619, DateTimeKind.Local).AddTicks(8441),
                            IsDeleted = false,
                            Name = "Electronics",
                            Status = (byte)1
                        },
                        new
                        {
                            Id = new Guid("a5ad65c2-4dc2-47dc-9607-26c985e25daa"),
                            Description = "Men's and Women's apparel",
                            InsertedDate = new DateTime(2025, 1, 15, 19, 13, 46, 619, DateTimeKind.Local).AddTicks(8508),
                            IsDeleted = false,
                            Name = "Clothing",
                            Status = (byte)1
                        },
                        new
                        {
                            Id = new Guid("ff7f6ac2-6635-45fa-aed7-14fbafd98109"),
                            Description = "Daily essentials and food items",
                            InsertedDate = new DateTime(2025, 1, 15, 19, 13, 46, 619, DateTimeKind.Local).AddTicks(8512),
                            IsDeleted = false,
                            Name = "Groceries",
                            Status = (byte)1
                        });
                });

            modelBuilder.Entity("ProductManagement.Domain.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("InsertedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3c9aee0c-8e03-4496-845c-1c03b3659aa5"),
                            CategoryId = new Guid("864267b8-8ab3-49a9-a6be-c65502bc9d92"),
                            Description = "Latest model smartphone",
                            InsertedDate = new DateTime(2025, 1, 15, 19, 13, 46, 619, DateTimeKind.Local).AddTicks(8700),
                            IsDeleted = false,
                            Name = "Smartphone",
                            Price = 699.99m,
                            Status = (byte)1,
                            StockQuantity = 50
                        },
                        new
                        {
                            Id = new Guid("45f2ea99-b517-44a1-84d7-cf55c1fe156a"),
                            CategoryId = new Guid("a5ad65c2-4dc2-47dc-9607-26c985e25daa"),
                            Description = "Cotton T-shirt",
                            InsertedDate = new DateTime(2025, 1, 15, 19, 13, 46, 619, DateTimeKind.Local).AddTicks(8714),
                            IsDeleted = false,
                            Name = "T-Shirt",
                            Price = 19.99m,
                            Status = (byte)1,
                            StockQuantity = 200
                        },
                        new
                        {
                            Id = new Guid("ca379a6a-ddaa-4dae-ae87-86005b6ce8a8"),
                            CategoryId = new Guid("ff7f6ac2-6635-45fa-aed7-14fbafd98109"),
                            Description = "Organic pasta",
                            InsertedDate = new DateTime(2025, 1, 15, 19, 13, 46, 619, DateTimeKind.Local).AddTicks(8718),
                            IsDeleted = false,
                            Name = "Pasta",
                            Price = 4.99m,
                            Status = (byte)1,
                            StockQuantity = 100
                        });
                });

            modelBuilder.Entity("ProductManagement.Domain.Models.Category", b =>
                {
                    b.HasOne("ProductManagement.Domain.Models.Category", "ParentCategory")
                        .WithMany()
                        .HasForeignKey("ParentCategoryId");

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("ProductManagement.Domain.Models.Product", b =>
                {
                    b.HasOne("ProductManagement.Domain.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
